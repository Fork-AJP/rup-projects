@startuml

state 0 as " :MEMBER:MANAGEMENT"
state 7 as " :MEMBER:MANAGEMENT"

skinparam {
    NoteBackgroundColor #whiteSmoke
}

0 --> updateMember
note on link
    User orders update member
end note

state updateMember {

state 2 as " " #LawnGreen
state 3 as " " #LawnGreen
state 5 as " " #LawnGreen
state 6 as " " #LawnGreen
state 8 as " "

[*] --> 2
note on link
<b>System shows</b>
* all members
<b>System requests</b>
* Member to update
<b>System allows</b>
* cancel update member
* confirm step
end note

2 --> 3
note on link
    User
    * introduces a member to update
    * and confirms step
end note

2 --> 8
note on link
    User requests to cancel update member
end note

3 --> 5
note on link
<b>System shows</b>
* member name
* member roles
<b>System allows</b>
* introduce member name
* add member rol (duplicate roles not allowed)
* remove member rol (if member has any rol)
* cancel update member
* save changes
end note

5 --> 3
note on link
* User introduces member name
* User adds member rol
* User removes member rol
end note

5 --> 8
note on link
    User requests to cancel update member
end note

8 --> [*]
note on link
<b>System shows</b>
* operation cancelled
end note

5 --> 6
note on link
    User requests to save changes
end note

6 --> [*]
note on link
    <b>System shows</b>
    * member updated
end note

}

updateMember --> 7
note on link
    <b>System shows</b>
    * all members in the project, his names and roles
    <b>System allows</b>
    * create member
    * update member
    * delete member
    * open iterations
    * open iteration
    * open use cases
end note

@enduml
