@startuml
    skinparam {
        NoteBackgroundColor #whiteSmoke
    }

    state ITERATION_MANAGEMENT_START as ":ITERATION_MANAGEMENT"
    state ITERATION_MANAGEMENT_END as ":ITERATION_MANAGEMENT"


    ITERATION_MANAGEMENT_START --> AssignActivity

    note on link
        User orders assign NotAssignedActivity
    end note

    state AssignActivity {
        state 1 as " " #LawnGreen
        state 5 as " " #LawnGreen
        state 13 as " " #LawnGreen
        state 14 as " " #LawnGreen
        state 20 as " "
        state 15 <<choice>>


    1 --> 13
    note on link
    <b>System shows</b>
    * for each member
    **assignedActivities in his datetime until end of current iteration
    * for each discipline (requirements, analysis, design, implementation)
    ** NotAssignedActivities (with activity type)
    <b>System requires</b>
    * introduce NotAssignedActivity to be assigned
    <b>System allows</b>
    * confirm step
    * cancel assign activity
    end note

    13 --> 5
    note on link
        User
        * introduces NotAssignedActivity
        * and orders confirm step
    end note

    13 --> 20
    note on link
        User orders cancel assign activity
    end note

    5 --> 14
    note on link
    <b>System shows</b>
    * NotAssignedActivity
    ** duration (in hours)
    ** activity type
    * for each member
    **assignedActivities in his datetime until end of current iteration
    <b>System requires</b>
    * introduce assign destination
    ** specific member hour without assignedActivity
          __(valid destination only dates in future)__
    <b>System allows</b>
    * confirm step
    * cancel assign activity
    end note

    14 -down-> 15
    note on link
        * User introduces assign destination
        * and orders confirm selection
    end note

    14 --> 20
    note on link
    User orders cancel assign activity
    end note

    20 --> [*]
    note on link
         <b>System shows</b>
         * __assign activity cancelled__
    end note

    15 --> 5
    note on link
        [NotAssignedActivity duration > member assign destination of not assigned time until next assignedActivity
        OR
        NotAssignedActivity overlaps member max capacity (hours) in current iteration]
    end note

    15 --> [*]
    note on link
     <b>System shows</b>
     * __NotAssignedActivity was assigned to member__
     end note

}
     AssignActivity --> ITERATION_MANAGEMENT_END
     note on link
          <b>System shows</b>
          * for each member
          **assignedActivities in his datetime until end of current iteration
          * for each discipline (requirements, analysis, design, implementation)
          ** NotAssignedCost
          ** NotAssignedActivities (with activity type)
          <b>System allows</b>
          * Split activity
          * Assign activity
          * Re-estimate activity
          * Merge activity
          * Open project
          * Open members
          * Close system
     end note

@enduml
