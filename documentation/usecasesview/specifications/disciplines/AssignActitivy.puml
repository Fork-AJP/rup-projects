@startuml

    skinparam {
        NoteBackgroundColor #whiteSmoke
        ArrowColor #green
        NoteBorderColor #green
    }

    state ITERATION_MANAGEMENT_START as ":ITERATION_MANAGEMENT"
    state ITERATION_MANAGEMENT_END as ":ITERATION_MANAGEMENT"

    ITERATION_MANAGEMENT_START -[#Green]-> AssignActivity

    state AssignActivity {
        state 1 as " "
        state 13 as " "
        state 14 as " "
        state 21 as " "
        state 22 as " "
        state 23 as " "
        state 24 as " "
        state 25 as " "
        state 26 as " "
        state 20 as " "
        state 2 <<choice>>
        state 15 <<choice>>


    [*] --> 1
    note on link
        User requests to assign Activity
    end note

    1 --> 13
    note on link
    <b>System shows</b>
    * for each member
    **assignedActivities in his datetime until end of current iteration
    * for each discipline (requirements, analysis, design, implementation)
    ** NotAssignedActivities (with activity type)
    <b>System requires</b>
    * Activity to be assigned
    <b>System allows</b>
    * cancel assign activity
    end note

    13 --> 2
    note on link
        User provides Activity to be assigned
    end note

    2 --> 23
    note on link
    [NotAssignedActivity provided]
    end note

    2 --> 24
    note on link
    [AssignedActivity provided]
    end note

    24 --> 25
    note on link
    <b>System shows</b>
    * AssignActivity
    ** member
    <b>System requires</b>
    * Assign destination
    ** AssignActivity associated NotAssignedCost
    <b>System allows</b>
    * cancel assign activity
    end note


    13 -[#red]-> 20
    note on link
        User requests to cancel assign activity
    end note

    25 -[#red]-> 20
    note on link
    <b>User requests to</b>
    * cancel assign activity
    end note

    25 --> 26
    note on link
    <b>User provides</b>
    * Assign destination
    end note

    26 --> [*]
    note on link
    <b>System shows</b>
    * Activity as NotAssignedActivity in the top of the associated NotAssignedCost
    end note


    23 --> 14
    note on link
    <b>System shows</b>
    * NotAssignedActivity
    ** duration (in hours)
    ** activity type
    * for each member
    **assignedActivities in his datetime until end of current iteration
    <b>System requires</b>
    * Assign destination
    ** specific member hour without assignedActivity
          __(valid destination only dates in future)__
    <b>System allows</b>
    * cancel assign activity
    end note

    14 -down-> 15
    note on link
        User provides assign destination
    end note

    15 --> 21
    note on link
    [members assigned activity duration exceeds members max capacity]
    end note

    21 --> 22
    note on link
    <b>System shows</b>
    * maximum members capacity exceeded for this iteration
    ** members schedule column background in red
    * all member AssignActivities after the end datetime of the activity to be assigned displaced downwards
    * <color:red>Â¿cuando asignamos las actividades se van apilando una encima de otra sin dejar hueco?</color>
    end note

    14 -[#red]-> 20
    note on link
        User requests to cancel assign activity
    end note

    20 -[#red]-> [*]
    note on link
         <b>System shows</b>
         * assign activity cancelled
    end note


    15 --> 22


    22 --> [*]
    note on link
    <b>System shows</b>
    * NotAssignedActivity was assigned to member
     end note

}
     AssignActivity --> ITERATION_MANAGEMENT_END
     note on link
          <b>System shows</b>
          * for each member
          **assignedActivities in his datetime until end of current iteration
          * for each discipline (requirements, analysis, design, implementation)
          ** NotAssignedCost
          ** NotAssignedActivities (with activity type)
          <b>System allows</b>
          * Split activity
          * Assign activity
          * Re-estimate activity
          * Merge activity
          * Open iterations
          * Open members
          * Close system
     end note

@enduml
